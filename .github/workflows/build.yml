# Buildability check
# ==================
# Build dolmen using various version of the OCaml compiler
name: build

# Configure when to run the workflows. Currently only when
# it affects the `master` branch (either pushes to the branch,
# or pull request against it).
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Build workflow
  # ==============
  # Goal: Ensure the packages builds across all supported
  # versions of the ocaml compiler.
  build:

    runs-on: ${{ matrix.os }}

    # Build Matrix
    # --------------
    strategy:
      # Do not cancel other jobs when one fails
      fail-fast: false

      matrix:
        # Operating system to run tests on.
        os:
          - ubuntu-latest

        # Ocaml versions to test. This is a bit of a misnomer, considering
        # that it is actually just a list of package to install as the base
        # of the switch
        ocaml-version:
          - ocaml-variants.4.14.0+options,ocaml-option-flambda
          - ocaml-base-compiler.4.14.0
          - ocaml-base-compiler.4.13.1
          - ocaml-base-compiler.4.12.1
          - ocaml-base-compiler.4.11.2
          - ocaml-base-compiler.4.10.1

    # Build ENV
    # ---------
    env:
      # Ensure opam will not stop because it waits on some user input
      OPAMYES: "true"


    # Build/test steps
    # ----------------
    steps:
    # checkout the repo (full clone, necessary for push later)
    - name: Checkout the repo
      uses: actions/checkout@v3
    # Setup ocaml/opam
    - name: Setup ocaml/opam
      uses: avsm/setup-ocaml@v2
      with:
        ocaml-compiler: ${{ matrix.ocaml-version }}
    # Run opam udpate to get an up-to-date repo
    - name: Update opam repo
      run: opam update
    # Install ocaml deps
    - name: Install Ocaml deps
      run: opam install . --deps-only
    # Build the package
    - name: Build the package
      run: opam exec -- make
