; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for ignored_statement_1.smt2
; Incremental test

(rule
   (target  ignored_statement_1.incremental)
   (deps    (:input ignored_statement_1.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff ignored_statement_1.expected ignored_statement_1.incremental)))

; Full mode test

(rule
   (target  ignored_statement_1.full)
   (deps    (:input ignored_statement_1.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff ignored_statement_1.expected ignored_statement_1.full)))


; Test for missing_check_sat.smt2
; Incremental test

(rule
   (target  missing_check_sat.incremental)
   (deps    (:input missing_check_sat.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff missing_check_sat.expected missing_check_sat.incremental)))

; Full mode test

(rule
   (target  missing_check_sat.full)
   (deps    (:input missing_check_sat.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff missing_check_sat.expected missing_check_sat.full)))


; Test for missing_exit.smt2
; Incremental test

(rule
   (target  missing_exit.incremental)
   (deps    (:input missing_exit.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff missing_exit.expected missing_exit.incremental)))

; Full mode test

(rule
   (target  missing_exit.full)
   (deps    (:input missing_exit.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff missing_exit.expected missing_exit.full)))


; Test for missing_set_logic.smt2
; Incremental test

(rule
   (target  missing_set_logic.incremental)
   (deps    (:input missing_set_logic.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff missing_set_logic.expected missing_set_logic.incremental)))

; Full mode test

(rule
   (target  missing_set_logic.full)
   (deps    (:input missing_set_logic.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff missing_set_logic.expected missing_set_logic.full)))


; Test for pop_without_push.smt2
; Incremental test

(rule
   (target  pop_without_push.incremental)
   (deps    (:input pop_without_push.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff pop_without_push.expected pop_without_push.incremental)))

; Full mode test

(rule
   (target  pop_without_push.full)
   (deps    (:input pop_without_push.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff pop_without_push.expected pop_without_push.full)))


; Test for stmt_after_exit.smt2
; Incremental test

(rule
   (target  stmt_after_exit.incremental)
   (deps    (:input stmt_after_exit.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff stmt_after_exit.expected stmt_after_exit.incremental)))

; Full mode test

(rule
   (target  stmt_after_exit.full)
   (deps    (:input stmt_after_exit.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff stmt_after_exit.expected stmt_after_exit.full)))


; Test for unclosed_push.smt2
; Incremental test

(rule
   (target  unclosed_push.incremental)
   (deps    (:input unclosed_push.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff unclosed_push.expected unclosed_push.incremental)))

; Full mode test

(rule
   (target  unclosed_push.full)
   (deps    (:input unclosed_push.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff unclosed_push.expected unclosed_push.full)))


; Auto-generated part end
