; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for let_seq.smt2
; Incremental test

(rule
   (target  let_seq.incremental)
   (deps    (:input let_seq.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff let_seq.expected let_seq.incremental)))

; Full mode test

(rule
   (target  let_seq.full)
   (deps    (:input let_seq.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff let_seq.expected let_seq.full)))


; Test for nest_pattern.smt2
; Incremental test

(rule
   (target  nest_pattern.incremental)
   (deps    (:input nest_pattern.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff nest_pattern.expected nest_pattern.incremental)))

; Full mode test

(rule
   (target  nest_pattern.full)
   (deps    (:input nest_pattern.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff nest_pattern.expected nest_pattern.full)))


; Test for simple_pattern.smt2
; Incremental test

(rule
   (target  simple_pattern.incremental)
   (deps    (:input simple_pattern.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff simple_pattern.expected simple_pattern.incremental)))

; Full mode test

(rule
   (target  simple_pattern.full)
   (deps    (:input simple_pattern.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff simple_pattern.expected simple_pattern.full)))


; Auto-generated part end
