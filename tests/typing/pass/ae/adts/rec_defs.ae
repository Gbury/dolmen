type t =
    A
  | B of { us : u }

and u =
    C
  | D of { us1 : t }

function f(x: t) : int =
  match x with
  | A -> 1
  | B(y) -> if g(y) then 2 else 3
end

and predicate g(y1: u) =
  match y1 with
  | C -> true
  | D(x) -> f(x) = 1
end

goal size : (f(B(D(A))) = 3)
