; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for builtin_sort.smt2
; Incremental test

(rule
   (target  builtin_sort.incremental)
   (deps    (:input builtin_sort.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff builtin_sort.expected builtin_sort.incremental)))

; Full mode test

(rule
   (target  builtin_sort.full)
   (deps    (:input builtin_sort.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff builtin_sort.expected builtin_sort.full)))


; Test for const_var.smt2
; Incremental test

(rule
   (target  const_var.incremental)
   (deps    (:input const_var.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff const_var.expected const_var.incremental)))

; Full mode test

(rule
   (target  const_var.full)
   (deps    (:input const_var.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff const_var.expected const_var.full)))


; Test for def_fun_param.smt2
; Incremental test

(rule
   (target  def_fun_param.incremental)
   (deps    (:input def_fun_param.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff def_fun_param.expected def_fun_param.incremental)))

; Full mode test

(rule
   (target  def_fun_param.full)
   (deps    (:input def_fun_param.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff def_fun_param.expected def_fun_param.full)))


; Test for reserved_const.smt2
; Incremental test

(rule
   (target  reserved_const.incremental)
   (deps    (:input reserved_const.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff reserved_const.expected reserved_const.incremental)))

; Full mode test

(rule
   (target  reserved_const.full)
   (deps    (:input reserved_const.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff reserved_const.expected reserved_const.full)))


; Test for variables.smt2
; Incremental test

(rule
   (target  variables.incremental)
   (deps    (:input variables.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff variables.expected variables.incremental)))

; Full mode test

(rule
   (target  variables.full)
   (deps    (:input variables.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff variables.expected variables.full)))


; Auto-generated part end
