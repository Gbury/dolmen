; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for scope.zf
; Incremental test

(rule
   (target  scope.incremental)
   (deps    (:input scope.zf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff scope.expected scope.incremental)))

; Full mode test

(rule
   (target  scope.full)
   (deps    (:input scope.zf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff scope.expected scope.full)))


; Test for scope_ret.zf
; Incremental test

(rule
   (target  scope_ret.incremental)
   (deps    (:input scope_ret.zf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff scope_ret.expected scope_ret.incremental)))

; Full mode test

(rule
   (target  scope_ret.full)
   (deps    (:input scope_ret.zf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff scope_ret.expected scope_ret.full)))


; Auto-generated part end
