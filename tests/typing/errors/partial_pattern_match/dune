; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for partial_1.ae
; Full mode test

(rule
   (target  partial_1.full)
   (deps    (:input partial_1.ae))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (not 0)
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff partial_1.expected partial_1.full)))


; Test for partial_2.ae
; Full mode test

(rule
   (target  partial_2.full)
   (deps    (:input partial_2.ae))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (not 0)
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff partial_2.expected partial_2.full)))


; Test for partial_3.zf
; Incremental test

(rule
   (target  partial_3.incremental)
   (deps    (:input partial_3.zf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (not 0)
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff partial_3.expected partial_3.incremental)))

; Full mode test

(rule
   (target  partial_3.full)
   (deps    (:input partial_3.zf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (not 0)
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff partial_3.expected partial_3.full)))


; Auto-generated part end
