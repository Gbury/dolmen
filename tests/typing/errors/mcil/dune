; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for repeated_init.mcil
; Incremental test

(rule
   (target  repeated_init.incremental)
   (deps    (:input repeated_init.mcil))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff repeated_init.expected repeated_init.incremental)))

; Full mode test

(rule
   (target  repeated_init.full)
   (deps    (:input repeated_init.mcil))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff repeated_init.expected repeated_init.full)))


; Test for repeated_input.mcil
; Incremental test

(rule
   (target  repeated_input.incremental)
   (deps    (:input repeated_input.mcil))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff repeated_input.expected repeated_input.incremental)))

; Full mode test

(rule
   (target  repeated_input.full)
   (deps    (:input repeated_input.mcil))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff repeated_input.expected repeated_input.full)))


; Test for undefined-subsystem.mcil
; Incremental test

(rule
   (target  undefined-subsystem.incremental)
   (deps    (:input undefined-subsystem.mcil))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff undefined-subsystem.expected undefined-subsystem.incremental)))

; Full mode test

(rule
   (target  undefined-subsystem.full)
   (deps    (:input undefined-subsystem.mcil))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff undefined-subsystem.expected undefined-subsystem.full)))


; Test for undefined-system.mcil
; Incremental test

(rule
   (target  undefined-system.incremental)
   (deps    (:input undefined-system.mcil))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff undefined-system.expected undefined-system.incremental)))

; Full mode test

(rule
   (target  undefined-system.full)
   (deps    (:input undefined-system.mcil))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff undefined-system.expected undefined-system.full)))


; Auto-generated part end
