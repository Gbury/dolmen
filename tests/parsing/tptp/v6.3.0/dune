; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for SYN000+1.p
; Incremental test

(rule
   (target  SYN000+1.incremental)
   (deps    (:input SYN000+1.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000+1.expected SYN000+1.incremental)))

; Full mode test

(rule
   (target  SYN000+1.full)
   (deps    (:input SYN000+1.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000+1.expected SYN000+1.full)))


; Test for SYN000+2.p
; Incremental test

(rule
   (target  SYN000+2.incremental)
   (deps    (:input SYN000+2.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000+2.expected SYN000+2.incremental)))

; Full mode test

(rule
   (target  SYN000+2.full)
   (deps    (:input SYN000+2.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000+2.expected SYN000+2.full)))


; Test for SYN000-1.p
; Incremental test

(rule
   (target  SYN000-1.incremental)
   (deps    (:input SYN000-1.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000-1.expected SYN000-1.incremental)))

; Full mode test

(rule
   (target  SYN000-1.full)
   (deps    (:input SYN000-1.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000-1.expected SYN000-1.full)))


; Test for SYN000-2.p
; Incremental test

(rule
   (target  SYN000-2.incremental)
   (deps    (:input SYN000-2.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000-2.expected SYN000-2.incremental)))

; Full mode test

(rule
   (target  SYN000-2.full)
   (deps    (:input SYN000-2.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000-2.expected SYN000-2.full)))


; Test for SYN000=2.p
; Incremental test

(rule
   (target  SYN000=2.incremental)
   (deps    (:input SYN000=2.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000=2.expected SYN000=2.incremental)))

; Full mode test

(rule
   (target  SYN000=2.full)
   (deps    (:input SYN000=2.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000=2.expected SYN000=2.full)))


; Test for SYN000^1.p
; Incremental test

(rule
   (target  SYN000^1.incremental)
   (deps    (:input SYN000^1.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000^1.expected SYN000^1.incremental)))

; Full mode test

(rule
   (target  SYN000^1.full)
   (deps    (:input SYN000^1.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000^1.expected SYN000^1.full)))


; Test for SYN000^2.p
; Incremental test

(rule
   (target  SYN000^2.incremental)
   (deps    (:input SYN000^2.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000^2.expected SYN000^2.incremental)))

; Full mode test

(rule
   (target  SYN000^2.full)
   (deps    (:input SYN000^2.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000^2.expected SYN000^2.full)))


; Test for SYN000_1.p
; Incremental test

(rule
   (target  SYN000_1.incremental)
   (deps    (:input SYN000_1.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000_1.expected SYN000_1.incremental)))

; Full mode test

(rule
   (target  SYN000_1.full)
   (deps    (:input SYN000_1.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000_1.expected SYN000_1.full)))


; Test for SYN000_2.p
; Incremental test

(rule
   (target  SYN000_2.incremental)
   (deps    (:input SYN000_2.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000_2.expected SYN000_2.incremental)))

; Full mode test

(rule
   (target  SYN000_2.full)
   (deps    (:input SYN000_2.p) (glob_files Axioms/*.ax))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff SYN000_2.expected SYN000_2.full)))


; Auto-generated part end
