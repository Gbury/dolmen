; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for hole10.icnf
; Incremental test

(rule
   (target  hole10.incremental)
   (deps    (:input hole10.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff hole10.expected hole10.incremental)))

; Full mode test

(rule
   (target  hole10.full)
   (deps    (:input hole10.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff hole10.expected hole10.full)))


; Test for hole6.icnf
; Incremental test

(rule
   (target  hole6.incremental)
   (deps    (:input hole6.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff hole6.expected hole6.incremental)))

; Full mode test

(rule
   (target  hole6.full)
   (deps    (:input hole6.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff hole6.expected hole6.full)))


; Test for hole7.icnf
; Incremental test

(rule
   (target  hole7.incremental)
   (deps    (:input hole7.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff hole7.expected hole7.incremental)))

; Full mode test

(rule
   (target  hole7.full)
   (deps    (:input hole7.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff hole7.expected hole7.full)))


; Test for hole8.icnf
; Incremental test

(rule
   (target  hole8.incremental)
   (deps    (:input hole8.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff hole8.expected hole8.incremental)))

; Full mode test

(rule
   (target  hole8.full)
   (deps    (:input hole8.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff hole8.expected hole8.full)))


; Test for hole9.icnf
; Incremental test

(rule
   (target  hole9.incremental)
   (deps    (:input hole9.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff hole9.expected hole9.incremental)))

; Full mode test

(rule
   (target  hole9.full)
   (deps    (:input hole9.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff hole9.expected hole9.full)))


; Auto-generated part end
