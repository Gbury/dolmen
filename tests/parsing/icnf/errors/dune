; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for 001_assumption_bad_atom_1.icnf
; Incremental test

(rule
   (target  001_assumption_bad_atom_1.incremental)
   (deps    (:input 001_assumption_bad_atom_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_assumption_bad_atom_1.expected 001_assumption_bad_atom_1.incremental)))

; Full mode test

(rule
   (target  001_assumption_bad_atom_1.full)
   (deps    (:input 001_assumption_bad_atom_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_assumption_bad_atom_1.expected 001_assumption_bad_atom_1.full)))


; Test for 002_assumption_bad_first_atom_1.icnf
; Incremental test

(rule
   (target  002_assumption_bad_first_atom_1.incremental)
   (deps    (:input 002_assumption_bad_first_atom_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 002_assumption_bad_first_atom_1.expected 002_assumption_bad_first_atom_1.incremental)))

; Full mode test

(rule
   (target  002_assumption_bad_first_atom_1.full)
   (deps    (:input 002_assumption_bad_first_atom_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 002_assumption_bad_first_atom_1.expected 002_assumption_bad_first_atom_1.full)))


; Test for 003_assumption_unclosed_1.icnf
; Incremental test

(rule
   (target  003_assumption_unclosed_1.incremental)
   (deps    (:input 003_assumption_unclosed_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 003_assumption_unclosed_1.expected 003_assumption_unclosed_1.incremental)))

; Full mode test

(rule
   (target  003_assumption_unclosed_1.full)
   (deps    (:input 003_assumption_unclosed_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 003_assumption_unclosed_1.expected 003_assumption_unclosed_1.full)))


; Test for 004_clause_bad_atom_1.icnf
; Incremental test

(rule
   (target  004_clause_bad_atom_1.incremental)
   (deps    (:input 004_clause_bad_atom_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 004_clause_bad_atom_1.expected 004_clause_bad_atom_1.incremental)))

; Full mode test

(rule
   (target  004_clause_bad_atom_1.full)
   (deps    (:input 004_clause_bad_atom_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 004_clause_bad_atom_1.expected 004_clause_bad_atom_1.full)))


; Test for 005_clause_unclosed_1.icnf
; Incremental test

(rule
   (target  005_clause_unclosed_1.incremental)
   (deps    (:input 005_clause_unclosed_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 005_clause_unclosed_1.expected 005_clause_unclosed_1.incremental)))

; Full mode test

(rule
   (target  005_clause_unclosed_1.full)
   (deps    (:input 005_clause_unclosed_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 005_clause_unclosed_1.expected 005_clause_unclosed_1.full)))


; Test for 006_input_bad_1.icnf
; Incremental test

(rule
   (target  006_input_bad_1.incremental)
   (deps    (:input 006_input_bad_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_1.expected 006_input_bad_1.incremental)))

; Full mode test

(rule
   (target  006_input_bad_1.full)
   (deps    (:input 006_input_bad_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_1.expected 006_input_bad_1.full)))


; Test for 006_input_bad_2.icnf
; Incremental test

(rule
   (target  006_input_bad_2.incremental)
   (deps    (:input 006_input_bad_2.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_2.expected 006_input_bad_2.incremental)))

; Full mode test

(rule
   (target  006_input_bad_2.full)
   (deps    (:input 006_input_bad_2.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_2.expected 006_input_bad_2.full)))


; Test for 006_input_bad_3.icnf
; Incremental test

(rule
   (target  006_input_bad_3.incremental)
   (deps    (:input 006_input_bad_3.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_3.expected 006_input_bad_3.incremental)))

; Full mode test

(rule
   (target  006_input_bad_3.full)
   (deps    (:input 006_input_bad_3.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_3.expected 006_input_bad_3.full)))


; Test for 006_input_bad_4.icnf
; Incremental test

(rule
   (target  006_input_bad_4.incremental)
   (deps    (:input 006_input_bad_4.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_4.expected 006_input_bad_4.incremental)))

; Full mode test

(rule
   (target  006_input_bad_4.full)
   (deps    (:input 006_input_bad_4.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_4.expected 006_input_bad_4.full)))


; Test for 006_input_bad_5.icnf
; Incremental test

(rule
   (target  006_input_bad_5.incremental)
   (deps    (:input 006_input_bad_5.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_5.expected 006_input_bad_5.incremental)))

; Full mode test

(rule
   (target  006_input_bad_5.full)
   (deps    (:input 006_input_bad_5.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_5.expected 006_input_bad_5.full)))


; Test for 006_input_bad_6.icnf
; Incremental test

(rule
   (target  006_input_bad_6.incremental)
   (deps    (:input 006_input_bad_6.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_6.expected 006_input_bad_6.incremental)))

; Full mode test

(rule
   (target  006_input_bad_6.full)
   (deps    (:input 006_input_bad_6.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_input_bad_6.expected 006_input_bad_6.full)))


; Test for 007_input_p_inccnf_unclosed_1.icnf
; Incremental test

(rule
   (target  007_input_p_inccnf_unclosed_1.incremental)
   (deps    (:input 007_input_p_inccnf_unclosed_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 007_input_p_inccnf_unclosed_1.expected 007_input_p_inccnf_unclosed_1.incremental)))

; Full mode test

(rule
   (target  007_input_p_inccnf_unclosed_1.full)
   (deps    (:input 007_input_p_inccnf_unclosed_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 007_input_p_inccnf_unclosed_1.expected 007_input_p_inccnf_unclosed_1.full)))


; Test for 008_input_p_inccnf_bad_inccnf_1.icnf
; Incremental test

(rule
   (target  008_input_p_inccnf_bad_inccnf_1.incremental)
   (deps    (:input 008_input_p_inccnf_bad_inccnf_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 008_input_p_inccnf_bad_inccnf_1.expected 008_input_p_inccnf_bad_inccnf_1.incremental)))

; Full mode test

(rule
   (target  008_input_p_inccnf_bad_inccnf_1.full)
   (deps    (:input 008_input_p_inccnf_bad_inccnf_1.icnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 008_input_p_inccnf_bad_inccnf_1.expected 008_input_p_inccnf_bad_inccnf_1.full)))


; Auto-generated part end
