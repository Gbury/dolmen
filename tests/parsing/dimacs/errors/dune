; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for 001_clause_empty_1.cnf
; Incremental test

(rule
   (target  001_clause_empty_1.incremental)
   (deps    (:input 001_clause_empty_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_clause_empty_1.expected 001_clause_empty_1.incremental)))

; Full mode test

(rule
   (target  001_clause_empty_1.full)
   (deps    (:input 001_clause_empty_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_clause_empty_1.expected 001_clause_empty_1.full)))


; Test for 001_clause_empty_2.cnf
; Incremental test

(rule
   (target  001_clause_empty_2.incremental)
   (deps    (:input 001_clause_empty_2.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_clause_empty_2.expected 001_clause_empty_2.incremental)))

; Full mode test

(rule
   (target  001_clause_empty_2.full)
   (deps    (:input 001_clause_empty_2.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_clause_empty_2.expected 001_clause_empty_2.full)))


; Test for 001_clause_empty_3.cnf
; Incremental test

(rule
   (target  001_clause_empty_3.incremental)
   (deps    (:input 001_clause_empty_3.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_clause_empty_3.expected 001_clause_empty_3.incremental)))

; Full mode test

(rule
   (target  001_clause_empty_3.full)
   (deps    (:input 001_clause_empty_3.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_clause_empty_3.expected 001_clause_empty_3.full)))


; Test for 001_missing_p_1.cnf
; Incremental test

(rule
   (target  001_missing_p_1.incremental)
   (deps    (:input 001_missing_p_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_missing_p_1.expected 001_missing_p_1.incremental)))

; Full mode test

(rule
   (target  001_missing_p_1.full)
   (deps    (:input 001_missing_p_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_missing_p_1.expected 001_missing_p_1.full)))


; Test for 001_missing_p_2.cnf
; Incremental test

(rule
   (target  001_missing_p_2.incremental)
   (deps    (:input 001_missing_p_2.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_missing_p_2.expected 001_missing_p_2.incremental)))

; Full mode test

(rule
   (target  001_missing_p_2.full)
   (deps    (:input 001_missing_p_2.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 001_missing_p_2.expected 001_missing_p_2.full)))


; Test for 002_missing_cnf_1.cnf
; Incremental test

(rule
   (target  002_missing_cnf_1.incremental)
   (deps    (:input 002_missing_cnf_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 002_missing_cnf_1.expected 002_missing_cnf_1.incremental)))

; Full mode test

(rule
   (target  002_missing_cnf_1.full)
   (deps    (:input 002_missing_cnf_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 002_missing_cnf_1.expected 002_missing_cnf_1.full)))


; Test for 003_bad_var_num_1.cnf
; Incremental test

(rule
   (target  003_bad_var_num_1.incremental)
   (deps    (:input 003_bad_var_num_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 003_bad_var_num_1.expected 003_bad_var_num_1.incremental)))

; Full mode test

(rule
   (target  003_bad_var_num_1.full)
   (deps    (:input 003_bad_var_num_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 003_bad_var_num_1.expected 003_bad_var_num_1.full)))


; Test for 004_bad_clause_num_1.cnf
; Incremental test

(rule
   (target  004_bad_clause_num_1.incremental)
   (deps    (:input 004_bad_clause_num_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 004_bad_clause_num_1.expected 004_bad_clause_num_1.incremental)))

; Full mode test

(rule
   (target  004_bad_clause_num_1.full)
   (deps    (:input 004_bad_clause_num_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 004_bad_clause_num_1.expected 004_bad_clause_num_1.full)))


; Test for 005_header_unclosed_1.cnf
; Incremental test

(rule
   (target  005_header_unclosed_1.incremental)
   (deps    (:input 005_header_unclosed_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 005_header_unclosed_1.expected 005_header_unclosed_1.incremental)))

; Full mode test

(rule
   (target  005_header_unclosed_1.full)
   (deps    (:input 005_header_unclosed_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 005_header_unclosed_1.expected 005_header_unclosed_1.full)))


; Test for 006_clause_bad_atom_1.cnf
; Incremental test

(rule
   (target  006_clause_bad_atom_1.incremental)
   (deps    (:input 006_clause_bad_atom_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_clause_bad_atom_1.expected 006_clause_bad_atom_1.incremental)))

; Full mode test

(rule
   (target  006_clause_bad_atom_1.full)
   (deps    (:input 006_clause_bad_atom_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 006_clause_bad_atom_1.expected 006_clause_bad_atom_1.full)))


; Test for 008_clause_unended_1.cnf
; Incremental test

(rule
   (target  008_clause_unended_1.incremental)
   (deps    (:input 008_clause_unended_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 008_clause_unended_1.expected 008_clause_unended_1.incremental)))

; Full mode test

(rule
   (target  008_clause_unended_1.full)
   (deps    (:input 008_clause_unended_1.cnf))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff 008_clause_unended_1.expected 008_clause_unended_1.full)))


; Auto-generated part end
