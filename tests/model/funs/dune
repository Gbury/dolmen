; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for fun_1.smt2
; Incremental test

(rule
   (target  fun_1.incremental)
   (deps    (:response fun_1.rsmt2) (:input fun_1.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff fun_1.expected fun_1.incremental)))

; Full mode test

(rule
   (target  fun_1.full)
   (deps    (:response fun_1.rsmt2) (:input fun_1.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff fun_1.expected fun_1.full)))


; Test for fun_2.smt2
; Incremental test

(rule
   (target  fun_2.incremental)
   (deps    (:response fun_2.rsmt2) (:input fun_2.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff fun_2.expected fun_2.incremental)))

; Full mode test

(rule
   (target  fun_2.full)
   (deps    (:response fun_2.rsmt2) (:input fun_2.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff fun_2.expected fun_2.full)))


; Auto-generated part end
