; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for integral.smt2
; Incremental test

(rule
   (target  integral.incremental)
   (deps    (:response integral.rsmt2) (:input integral.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff integral.expected integral.incremental)))

; Full mode test

(rule
   (target  integral.full)
   (deps    (:response integral.rsmt2) (:input integral.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff integral.expected integral.full)))


; Test for rem.smt2
; Incremental test

(rule
   (target  rem.incremental)
   (deps    (:response rem.rsmt2) (:input rem.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff rem.expected rem.incremental)))

; Full mode test

(rule
   (target  rem.full)
   (deps    (:response rem.rsmt2) (:input rem.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff rem.expected rem.full)))


; Test for toIntegral-has-solution-259.smt2
; Incremental test

(rule
   (target  toIntegral-has-solution-259.incremental)
   (deps    (:response toIntegral-has-solution-259.rsmt2)
            (:input toIntegral-has-solution-259.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff toIntegral-has-solution-259.expected toIntegral-has-solution-259.incremental)))

; Full mode test

(rule
   (target  toIntegral-has-solution-259.full)
   (deps    (:response toIntegral-has-solution-259.rsmt2)
            (:input toIntegral-has-solution-259.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff toIntegral-has-solution-259.expected toIntegral-has-solution-259.full)))


; Test for unit.smt2
; Incremental test

(rule
   (target  unit.incremental)
   (deps    (:response unit.rsmt2) (:input unit.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff unit.expected unit.incremental)))

; Full mode test

(rule
   (target  unit.full)
   (deps    (:response unit.rsmt2) (:input unit.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes 0
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff unit.expected unit.full)))


; Auto-generated part end
