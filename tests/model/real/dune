; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for add.smt2
; Incremental test

(rule
   (target  add.incremental)
   (deps    (:response add.rsmt2) (:input add.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff add.expected add.incremental)))

; Full mode test

(rule
   (target  add.full)
   (deps    (:response add.rsmt2) (:input add.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff add.expected add.full)))


; Test for algebraic.smt2
; Incremental test

(rule
   (target  algebraic.incremental)
   (deps    (:response algebraic.rsmt2) (:input algebraic.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff algebraic.expected algebraic.incremental)))

; Full mode test

(rule
   (target  algebraic.full)
   (deps    (:response algebraic.rsmt2) (:input algebraic.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff algebraic.expected algebraic.full)))


; Test for div.smt2
; Incremental test

(rule
   (target  div.incremental)
   (deps    (:response div.rsmt2) (:input div.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff div.expected div.incremental)))

; Full mode test

(rule
   (target  div.full)
   (deps    (:response div.rsmt2) (:input div.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff div.expected div.full)))


; Test for div_zero_1.smt2
; Incremental test

(rule
   (target  div_zero_1.incremental)
   (deps    (:response div_zero_1.rsmt2) (:input div_zero_1.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff div_zero_1.expected div_zero_1.incremental)))

; Full mode test

(rule
   (target  div_zero_1.full)
   (deps    (:response div_zero_1.rsmt2) (:input div_zero_1.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff div_zero_1.expected div_zero_1.full)))


; Test for kissing_2_6_scramble.smt2
; Incremental test

(rule
   (target  kissing_2_6_scramble.incremental)
   (deps    (:response kissing_2_6_scramble.rsmt2)
            (:input kissing_2_6_scramble.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --check-model=true -r %{response} --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff kissing_2_6_scramble.expected kissing_2_6_scramble.incremental)))

; Full mode test

(rule
   (target  kissing_2_6_scramble.full)
   (deps    (:response kissing_2_6_scramble.rsmt2)
            (:input kissing_2_6_scramble.smt2))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --check-model=true -r %{response} --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff kissing_2_6_scramble.expected kissing_2_6_scramble.full)))


; Auto-generated part end
